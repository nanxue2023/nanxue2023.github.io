<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Add Comment Function in Your Blog</title>
      <link href="/2023/06/08/commfunc/commfunc/"/>
      <url>/2023/06/08/commfunc/commfunc/</url>
      
        <content type="html"><![CDATA[<h1 id="How-to-add-comment-function-in-your-blog"><a href="#How-to-add-comment-function-in-your-blog" class="headerlink" title="How to add comment function in your blog?"></a>How to add comment function in your blog?</h1><p>At first, I met some problems in adding comment function and I would give up if Wang hadn’t said that comment is the best way to communicate with me through my blog. I overcame the difficulties.Therefore, this article is born.</p><h2 id="Use-Enviroment"><a href="#Use-Enviroment" class="headerlink" title="Use Enviroment"></a>Use Enviroment</h2><ul><li>Hexo</li><li>Github</li><li>Matery</li></ul><p>This article can ensure that provided tutorial works under the circumstance that your blog is based on Hexo and Github and you enable Matery theme.</p><h2 id="Get-Start"><a href="#Get-Start" class="headerlink" title="Get Start"></a>Get Start</h2><p>Find <code>_config</code> file in your matery theme root directory and open it. About row number 319, there is <code>valine</code>. Set <code>enable</code> true. Then we need to use LeanCloud.</p><ul><li><p>Register a LeanCloud account<br>Note that domestic version and internation version accounts don’t share. Thus select a version more suitable for you.</p></li><li><p>Create app<br>After you register account, you will enter the page below.<br><img src="/lcmain.png"><br>Click ‘Create app’ button ,set your app name and write your app description. Choose ‘Developer’ as your app price plan.</p></li><li><p>Enter your app<br>Click created app and find settings-App keys. Copy AppID and AppKey and paste on the grey location in figure below. You will see figure below.<br><img src="/lcapk.png"><br>Copy AppID and AppKey and paste to <code>_config</code> opened before. Then there is a key step. look at this figure.<br><img src="/lcconfig.png"><br>This is a part of codes in <code>_config</code> file in your matery theme root directory. The original code doesn’t include <code>serverURLs</code>, you need to add the code according to the figure and fiil your AppID top 8 character in the green block. Add <code>serverURLs: https://xxxxxxxx.api.lncldglobal.com</code> after background, where <code>xxxxxxxx</code> is your top 8 characters of your AppId. Besides, replace your code as the note.<br><img src="/replace.png"></p></li><li><p>Modify <code>valine.ejs</code><br><code>valine.ejs</code> is in <code>theme root directory/layout/_partial</code>. Find and open it. Use <code>Ctrl+F</code> keyborad command and search valine. Modify your code according to the green area in figure below.<br><img src="/valinejs.png"></p></li><li><p>Regenerate your blog and deploy it<br>So far, you have finished adding comment function to your blog.</p></li></ul><p>If you have any questions, please ask me through comment area at the bottom of current page. Hope to get your feedback!</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Read Paper (Learn from Mu Li)</title>
      <link href="/2023/06/07/readpapers/"/>
      <url>/2023/06/07/readpapers/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Know-Structure-of-Paper"><a href="#1-Know-Structure-of-Paper" class="headerlink" title="1.Know Structure of Paper"></a>1.Know Structure of Paper</h1><ul><li>Title</li><li>Abstract</li><li>Introduction</li><li>Method</li><li>Experiment</li><li>Conclusions</li></ul><p>List above is the basic structure of a paper. Nearly all papers use this type of structure.</p><h1 id="2-Three-Times-Reading-Method"><a href="#2-Three-Times-Reading-Method" class="headerlink" title="2.Three Times Reading Method"></a>2.Three Times Reading Method</h1><h2 id="Pass-1"><a href="#Pass-1" class="headerlink" title="Pass 1"></a>Pass 1</h2><p>Read <strong>title, abstract</strong> and <strong>conclusions</strong> first. Knowing what the paper does, find <strong>figures</strong> and <strong>tabulars</strong> in method and experiment to learn more about the details. According to your own situation, determine whether to read next time.</p><h2 id="Pass-2"><a href="#Pass-2" class="headerlink" title="Pass 2"></a>Pass 2</h2><p>Read through the whole paper. Focus on significant figures and tabulars shown in method and experiment and understand every <strong>detail of those figures and tabulars</strong>. Find references that propose the problems and predecessors’ work. If you consider that the paper is a bit challenging, you can read the references and start simple. Having grasped the main points of the paper including what has paper done and how it works, you can decide whether to read the third time.</p><h2 id="Pass-3"><a href="#Pass-3" class="headerlink" title="Pass 3"></a>Pass 3</h2><p>Read through the whole paper. Figure out <strong>every sentence and paragraph</strong>. When you read the third time, you’d better think if you are the author, how will you do? Based on problems propose by the author, which methods will you take? It is just like that you are reproducing the author’s work and seek something to improve.</p><p>OK, these are summary of Li’s video. Hope it is helpful for you.<br>The link of Li’s video is <a href="https://www.bilibili.com/video/BV1H44y1t75x/?share_source=copy_web&vd_source=0beaa86e7600bf6a8b5508fbf4094227">here</a>.</p>]]></content>
      
      
      <categories>
          
          <category> Method </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Paper </tag>
            
            <tag> Mu Li </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/06/hello-world/"/>
      <url>/2023/06/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://nanxue2023.github.io/">Xue’s Blog</a>! This is my own blog for learning something intersting, including AI, wireless communications and so on. I’ll try to express myself with English so that I can improve my English writing skills for the reason that I’m not a native English speaker. I’m willing to receving your opinions and suggestions on my content and my language expression.</p><h2 id="What-is-the-website"><a href="#What-is-the-website" class="headerlink" title="What is the website?"></a>What is the website?</h2><p>This is a blog for learning and communicating AI, wireless communications and anything interesting.</p><h2 id="Why-I-create-the-blog"><a href="#Why-I-create-the-blog" class="headerlink" title="Why I create the blog?"></a>Why I create the blog?</h2><p>I’d like to record my study process and share my thoughts. On the one hand, I can better remember and understand what I’ve learned. On the other hand, I can talk with people who brouse the blog and we make progress together.</p><h2 id="How-I-operate-the-blog"><a href="#How-I-operate-the-blog" class="headerlink" title="How I operate the blog?"></a>How I operate the blog?</h2><p>I will update articles irregularly. The articles are mainly composed of study notes, my thoughts and paper summary. Maybe there will be other topics but I don’t know at present.</p><h2 id="The-First-Record"><a href="#The-First-Record" class="headerlink" title="The First Record"></a>The First Record</h2><p>For a front-end noob, I met some bugs and errors when I built the website. I shall record the building process and solutions for some bugs and errors. This part is only available in Win10 Environment.</p><h3 id="Register-Github-Account-and-Create-a-New-Repository"><a href="#Register-Github-Account-and-Create-a-New-Repository" class="headerlink" title="Register Github Account and Create a New Repository"></a>Register Github Account and Create a New Repository</h3><p>If you are strange about building your own blog or website, it is simple and convenient for you to utilize Github Pages. The first thing you should do is to register a <a href="https://github.com/">Github</a> account and then create a new repository.</p><p>The repository name should be ‘username.github.io’, in which the username is your Github account username. Next the permission choose ‘Public’ instead of ‘Private’. Click the ‘Create repository’ button and you finish creating repository.</p><h3 id="Download-and-Install-Git-and-Node-js"><a href="#Download-and-Install-Git-and-Node-js" class="headerlink" title="Download and Install Git and Node.js"></a>Download and Install Git and Node.js</h3><p>Download <a href="https://git-scm.com/">Git</a> (click the blue Git and get access to Git official website).<br>Download <a href="https://nodejs.org/en">Node.js</a> (click the blue Node.js and get access to Node.js official website)</p><p>Git’s installation is simple. Just select customized installation folder or address as you want and click ‘next’.</p><p>Node.js need some additional operations. After you finish installing Node.js, test whether the installation is successful or not. Open CMD and input </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">node</span> <span class="token parameter variable">-v</span>$ <span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>to check the version. If the CMD window return the version, you succeed in installation.</p><p>Because when executing commands such as </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> <span class="token function">install</span> webpack <span class="token parameter variable">-g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> to install globally, the module will be installed in npm and npm_cache under the path of C:\Users\username\AppData\Roaming by default, which is inconvenient to manage and takes up space on the C drive.</p><p>So configure a custom global module installation directory here, and create two new folders ‘<strong>node_global</strong>‘ and ‘<strong>node_cache</strong>‘ under the node.js installation directory.</p><p>Then operate the next commands. (for example, your Node.js installation address is ‘<strong>D:\Program Files\nodejs</strong>‘)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"D:\Program Files<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_global"</span>$ <span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">"D:\Program Files<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_cache"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>Configure environment variables</strong><br>warning: Two operations below are translated from Chinese. Related nouns may not accurate and you can’t find them in your system settings. If your system language is English, please search for English tutorial online. </p><p>“Environment Variables” -&gt; “System Variables”: Create a new variable named “NODE_PATH” with a value of “D:\Program Files\nodejs\node_global\node_modules”</p><p>“Environment Variables” -&gt; “User Variables”: Edit the Path in the user variable, and change the path of the corresponding npm (“C:\Users\username\AppData\Roaming\npm”) to: “D:\Program Files\ nodejs\node_global”</p><p>For Chinese readers, this is the reference tutorial — <a href="https://www.cnblogs.com/matanzhang/p/11441693.html">Nodejs中文配置教程</a>.</p><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>After preparation, choose a suitable address in your drive and create a new folder to place your blog document. In this directory, right click and Git Bash Here. Input <code>npm i hexo-cli -g</code> and enter. Hexo will be installed. Here, I met errors:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Error: EPERM: operation not permitted <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>I run Git Bash as administrator and solve the error.</p><p>If you successfully install hexo, input <code>hexo -v</code> to check.</p><p>Input <code>hexo init</code> to initialize the website and input <code>npm install</code> to install necessary components.</p><p>Then <code>hexo g</code> generate the website and <code>hexo s</code> generate a static website on local server. User your browser to access <a href="localhost:4000/">localhost:4000&#x2F;</a> and you will see your blog. Next click <code>Ctrl + C</code> to teminate local server.</p><h3 id="Deploy-Website-to-Github"><a href="#Deploy-Website-to-Github" class="headerlink" title="Deploy Website to Github"></a>Deploy Website to Github</h3><p>Still open Git Bash and input:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"your username"</span>$ <span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"your register email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Note that ‘<strong>your username</strong>‘ is your Github username and ‘<strong>your register email</strong>‘ is your Github log-in email.</p><p>Generate SSH Key:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your register email"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Open your Github and find <code>settings</code> below your profile. Click <code>SSH and GPG keys</code> and create a new SSH with arbitrary name.</p><p>Input <code>cat ~/.ssh/id_rsa.pub </code> in Git Bash and copy the output. Paste on the page of ‘create new SSH’ and save. Finally, input <code>ssh -T git@github.com</code> in Git Bash. If it shows “Hi ‘your user name’!”, you succeed.</p><p>Open <code>_config.yml</code> in your blog root directory, and modify the last row:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repository: git@github.com:username/username.github.io  branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Now your blog is built and you can explore it by yourself!</p><p>Last, this is a reference tutorial for hexo+github — <a href="https://zhuanlan.zhihu.com/p/35668237">知乎：超详细hexo+github博客搭建小白教程</a>.</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
